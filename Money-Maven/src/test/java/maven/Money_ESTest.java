/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 09 05:30:40 GMT 2025
 */

package maven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import maven.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Money_ESTest extends Money_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Money money0 = new Money((-644), (String) null);
      Money money1 = new Money(0, "&Hg>N`pA3VQ#b@%");
      boolean boolean0 = money1.equals(money0);
      assertFalse(boolean0);
      assertEquals((-644), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Money money0 = new Money((-1012), (String) null);
      money0.getCurrency();
      assertEquals((-1012), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Money money0 = new Money((-1523), "s");
      money0.getCurrency();
      assertEquals((-1523), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Money money0 = new Money(4404, (String) null);
      int int0 = money0.getAmount();
      assertEquals(4404, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Money money0 = new Money((-1012), (String) null);
      int int0 = money0.getAmount();
      assertEquals((-1012), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Money money0 = new Money(0, "&Hg>N`pA3VQ#b@%");
      Money money1 = money0.add(money0);
      assertEquals(0, money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Money money0 = new Money((-2671), "`I>");
      Money money1 = new Money(5011, "");
      Money money2 = money0.add(money1);
      assertEquals(2340, money2.getAmount());
      assertEquals(5011, money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Money money0 = new Money((-644), (String) null);
      // Undeclared exception!
      try { 
        money0.equals(money0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Money money0 = new Money((-2671), "`I>");
      // Undeclared exception!
      try { 
        money0.add((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("maven.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Money money0 = new Money(0, "");
      money0.getCurrency();
      assertEquals(0, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Money money0 = new Money(0, "");
      int int0 = money0.getAmount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Money money0 = new Money((-120), "8GA*");
      Money money1 = new Money((-120), "9GA*");
      boolean boolean0 = money0.equals(money1);
      assertFalse(boolean0);
      assertEquals((-120), money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Money money0 = new Money((-250), "SaC`:J`@5.n/|u:8!>");
      boolean boolean0 = money0.equals("SaC`:J`@5.n/|u:8!>");
      assertFalse(boolean0);
      assertEquals((-250), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Money money0 = new Money((-250), "SaC`:J`@5.n/|u:8!>");
      boolean boolean0 = money0.equals(money0);
      assertEquals((-250), money0.getAmount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Money money0 = new Money((-250), "SaC`:J`@5.n/|u:8!>");
      Money money1 = money0.add(money0);
      boolean boolean0 = money1.equals(money0);
      assertEquals((-250), money0.getAmount());
      assertFalse(boolean0);
      assertEquals((-500), money1.getAmount());
      assertFalse(money0.equals((Object)money1));
  }
}
